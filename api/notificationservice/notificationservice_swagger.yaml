basePath: /api/notification-service
definitions:
  filter.CompareOperator:
    enum:
    - beginsWith
    - doesNotBeginWith
    - contains
    - doesNotContain
    - isNumberEqualTo
    - isEqualTo
    - isIpEqualTo
    - isStringEqualTo
    - isStringCaseInsensitiveEqualTo
    - isNotEqualTo
    - isNumberNotEqualTo
    - isIpNotEqualTo
    - isStringNotEqualTo
    - isGreaterThan
    - isGreaterThanOrEqualTo
    - isLessThan
    - isLessThanOrEqualTo
    - beforeDate
    - afterDate
    - exists
    - isEqualToRating
    - isNotEqualToRating
    - isGreaterThanRating
    - isLessThanRating
    - isGreaterThanOrEqualToRating
    - isLessThanOrEqualToRating
    - betweenDates
    type: string
    x-enum-varnames:
    - CompareOperatorBeginsWith
    - CompareOperatorDoesNotBeginWith
    - CompareOperatorContains
    - CompareOperatorDoesNotContain
    - CompareOperatorIsNumberEqualTo
    - CompareOperatorIsEqualTo
    - CompareOperatorIsIpEqualTo
    - CompareOperatorIsStringEqualTo
    - CompareOperatorIsStringCaseInsensitiveEqualTo
    - CompareOperatorIsNotEqualTo
    - CompareOperatorIsNumberNotEqualTo
    - CompareOperatorIsIpNotEqualTo
    - CompareOperatorIsStringNotEqualTo
    - CompareOperatorIsGreaterThan
    - CompareOperatorIsGreaterThanOrEqualTo
    - CompareOperatorIsLessThan
    - CompareOperatorIsLessThanOrEqualTo
    - CompareOperatorBeforeDate
    - CompareOperatorAfterDate
    - CompareOperatorExists
    - CompareOperatorIsEqualToRating
    - CompareOperatorIsNotEqualToRating
    - CompareOperatorIsGreaterThanRating
    - CompareOperatorIsLessThanRating
    - CompareOperatorIsGreaterThanOrEqualToRating
    - CompareOperatorIsLessThanOrEqualToRating
    - CompareOperatorBetweenDates
  filter.ControlType:
    enum:
    - bool
    - enum
    - float
    - integer
    - string
    - dateTime
    - uuid
    - autocomplete
    type: string
    x-enum-varnames:
    - ControlTypeBool
    - ControlTypeEnum
    - ControlTypeFloat
    - ControlTypeInteger
    - ControlTypeString
    - ControlTypeDateTime
    - ControlTypeUuid
    - ControlTypeAutocomplete
  filter.LogicOperator:
    enum:
    - and
    - or
    type: string
    x-enum-varnames:
    - LogicOperatorAnd
    - LogicOperatorOr
  filter.ReadableValue-string:
    properties:
      label:
        description: Label is the human-readable form of the value
        type: string
      value:
        description: Value is the value for the backend
        type: string
    type: object
  filter.Request:
    properties:
      fields:
        items:
          $ref: '#/definitions/filter.RequestField'
        type: array
      operator:
        $ref: '#/definitions/filter.LogicOperator'
    required:
    - operator
    type: object
  filter.RequestField:
    properties:
      keys:
        items:
          type: string
        type: array
      name:
        type: string
      operator:
        $ref: '#/definitions/filter.CompareOperator'
      value:
        description: Value can be a list of values or a value
    required:
    - name
    - operator
    - value
    type: object
  filter.RequestOptionType:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/filter.ControlType'
        enum:
        - string
        - float
        - integer
        - enum
        - bool
    type: object
  models.Notification:
    properties:
      customFields:
        additionalProperties: {}
        description: can contain arbitrary structured information about the notification
        type: object
      detail:
        type: string
      id:
        readOnly: true
        type: string
      level:
        enum:
        - info
        - warning
        - error
        type: string
      origin:
        type: string
      originUri:
        description: can be used to provide a link to the origin
        type: string
      timestamp:
        format: date-time
        type: string
      title:
        description: can also be seen as the 'type'
        type: string
    required:
    - detail
    - level
    - origin
    - timestamp
    - title
    type: object
  paging.Request:
    properties:
      index:
        type: integer
      size:
        type: integer
    type: object
  paging.Response:
    properties:
      index:
        type: integer
      size:
        type: integer
      totalDisplayableResults:
        type: integer
      totalResults:
        type: integer
    required:
    - index
    - size
    - totalDisplayableResults
    type: object
  query.FilterOption:
    properties:
      control:
        $ref: '#/definitions/filter.RequestOptionType'
      multiSelect:
        type: boolean
      name:
        $ref: '#/definitions/filter.ReadableValue-string'
      operators:
        items:
          properties:
            label:
              description: Label is the human-readable form of the value
              type: string
            value:
              allOf:
              - $ref: '#/definitions/filter.CompareOperator'
              description: Value is the value for the backend
          type: object
        type: array
      values:
        items:
          type: string
        type: array
    required:
    - control
    - multiSelect
    - name
    - operators
    type: object
  query.Metadata:
    properties:
      filter:
        $ref: '#/definitions/filter.Request'
      paging:
        $ref: '#/definitions/paging.Response'
      sorting:
        $ref: '#/definitions/sorting.Request'
    type: object
  query.ResponseListWithMetadata-models_Notification:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Notification'
        type: array
      metadata:
        $ref: '#/definitions/query.Metadata'
    required:
    - data
    - metadata
    type: object
  query.ResponseWithMetadata-array_query_FilterOption:
    properties:
      data:
        items:
          $ref: '#/definitions/query.FilterOption'
        type: array
      metadata:
        $ref: '#/definitions/query.Metadata'
    required:
    - data
    - metadata
    type: object
  query.ResponseWithMetadata-models_Notification:
    properties:
      data:
        $ref: '#/definitions/models.Notification'
      metadata:
        $ref: '#/definitions/query.Metadata'
    required:
    - data
    - metadata
    type: object
  query.ResultSelector:
    properties:
      filter:
        $ref: '#/definitions/filter.Request'
      paging:
        $ref: '#/definitions/paging.Request'
      sorting:
        $ref: '#/definitions/sorting.Request'
    type: object
  sorting.Request:
    properties:
      column:
        type: string
      direction:
        $ref: '#/definitions/sorting.SortDirection'
    type: object
  sorting.SortDirection:
    enum:
    - desc
    - asc
    - ""
    type: string
    x-enum-varnames:
    - DirectionDescending
    - DirectionAscending
    - NoDirection
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  description: HTTP API of the Notification service
  license:
    name: AGPL-3.0-or-later
  title: Notification Service API
  version: "1.0"
paths:
  /notifications:
    post:
      consumes:
      - application/json
      description: Create a new notification
      parameters:
      - description: Authentication header
        example: Bearer eyJhbGciOiJSUzI1NiIs
        in: header
        name: Authorization
        required: true
        type: string
      - description: notification to add
        in: body
        name: Notification
        required: true
        schema:
          $ref: '#/definitions/models.Notification'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            api-version:
              description: API version
              type: string
          schema:
            $ref: '#/definitions/query.ResponseWithMetadata-models_Notification'
      security:
      - KeycloakAuth: []
      summary: Create Notification
      tags:
      - notification
    put:
      consumes:
      - application/json
      description: Returns a list of notifications matching the provided filters
      parameters:
      - description: Authentication header
        example: Bearer eyJhbGciOiJSUzI1NiIs
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters, paging and sorting
        in: body
        name: MatchCriterias
        required: true
        schema:
          $ref: '#/definitions/query.ResultSelector'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            api-version:
              description: API version
              type: string
          schema:
            $ref: '#/definitions/query.ResponseListWithMetadata-models_Notification'
      security:
      - KeycloakAuth: []
      summary: List Notifications
      tags:
      - notification
  /notifications/options:
    get:
      description: Get filter options for listing notifications
      parameters:
      - description: Authentication header
        example: Bearer eyJhbGciOiJSUzI1NiIs
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            api-version:
              description: API version
              type: string
          schema:
            $ref: '#/definitions/query.ResponseWithMetadata-array_query_FilterOption'
      security:
      - KeycloakAuth: []
      summary: Notification filter options
      tags:
      - notification
securityDefinitions:
  KeycloakAuth:
    authorizationUrl: '{{.KeycloakAuthUrl}}/realms/{{.KeycloakRealm}}/protocol/openid-connect/auth'
    flow: implicit
    type: oauth2
swagger: "2.0"
